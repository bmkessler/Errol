# vim:ft=python
import os

double_conversion_sources = ['src/' + x for x in SConscript('src/SConscript')]
double_conversion_headers = ['src/' + x for x in [
    'bignum.h',
    'cached-powers.h',
    'diy-fp.h',
    'double-conversion.h',
    'fast-dtoa.h',
    'fixed-dtoa.h',
    'ieee.h',
    'strtod.h',
    'utils.h']]

library_name = 'double-conversion'
DESTDIR = ARGUMENTS.get('DESTDIR', '')
prefix = ARGUMENTS.get('prefix', '/usr/local')
lib = ARGUMENTS.get('libsuffix', 'lib')
libdir = os.path.join(DESTDIR + prefix, lib)
incdir = os.path.join(DESTDIR + prefix, 'include', library_name)

env = Environment(CPPPATH='#/src', LIBS=['m', 'stdc++'],
    CXXFLAGS=ARGUMENTS.get('CXXFLAGS', ''))
debug = ARGUMENTS.get('debug', 0)
optimize = ARGUMENTS.get('optimize', 0)
env.Replace(CXX = ARGUMENTS.get('CXX', 'g++'))

# for shared lib, requires scons 2.3.0
env['SHLIBVERSION'] = '1.0.0'

CCFLAGS = []
if int(debug):
  CCFLAGS.append(ARGUMENTS.get('CXXFLAGS', '-g -Wall -Werror'))
if int(optimize):
  CCFLAGS.append(ARGUMENTS.get('CXXFLAGS', '-O3'))

env.Append(CCFLAGS = " ".join(CCFLAGS))

double_conversion_shared_objects = [
    env.SharedObject(src) for src in double_conversion_sources]
double_conversion_static_objects = [
    env.StaticObject(src) for src in double_conversion_sources]

static_lib = env.StaticLibrary(library_name, double_conversion_static_objects)

env.Install(libdir, static_lib)
env.Install(incdir, double_conversion_headers)

env.Alias('install', [incdir, libdir])
